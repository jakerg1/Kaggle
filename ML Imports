# Imports and When to Use Them

### Always
import numpy as np                                     # for numerical operations and arrays
import pandas as pd                                    # for data manipulation and loading CSVs
import matplotlib.pyplot as plt                        # basic plotting (line charts, scatter, bar, etc.)
import seaborn as sns                                  # advanced plotting, heatmaps, pairplots, styled visuals

### Data Preprocessing (Scikit-learn)
from sklearn.model_selection import train_test_split   # to split train/test or train/val
from sklearn.preprocessing import StandardScaler       # to scale features (for linear models)
from sklearn.preprocessing import LabelEncoder         # to convert labels into integers (for ordered categorical)
from sklearn.preprocessing import OneHotEncoder        # to one-hot encode features (used inside pipelines)
from sklearn.model_selection import GridSearchCV       # to make a parameter grid do decide on values

### Models (Scikit-learn)
from sklearn.linear_model import LinearRegression      # regression model for continuous outputs
from sklearn.linear_model import LogisticRegression    # binary or multiclass classification
from sklearn.tree import DecisionTreeRegressor         # tree model for regression
from sklearn.ensemble import RandomForestRegressor     # ensemble of decision trees (better generalization)
from sklearn.ensemble import GradientBoostingRegressor # boosted trees (slower but powerful)
from sklearn.svm import SVR                            # support vector regression (with kernels)

### Model Evaluation
from sklearn.metrics import mean_squared_error         # for RMSE (regression)
from sklearn.metrics import r2_score                   # for RÂ² score (how much variance is explained)
from sklearn.metrics import accuracy_score             # for classification
from sklearn.metrics import confusion_matrix           # to see where your classifier is making mistakes
from sklearn.metrics import classification_report      # precision, recall, f1-score for each class

### Deep Learning
import tensorflow as tf                                # deep learning framework
from tensorflow import keras                           # high-level API in TensorFlow
from tensorflow.keras import layers                    # to build neural networks

###
import warnings                                      
warnings.filterwarnings('ignore')                      # hide annoying warnings in notebooks
